@page "/invalid"
@inject IMediator mediator
@inject AppState  state
@inject IToastService toastService

<div class="row">
    @foreach (var product in products)
    {
        <ProductListing Product="product" InvalidProductAddedEventCallback="DisplayInvalidProduct"></ProductListing>
    }
</div>
@code {
    IEnumerable<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await mediator.Send(new InvalidProductQuery());
    }



    void DisplayInvalidProduct (Product product)
    {
        toastService.ShowError($"{ product.Title} is not a valid product.");
        this.StateHasChanged();
    }
}
